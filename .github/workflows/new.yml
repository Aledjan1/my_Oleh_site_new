name: Node CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}
  pull_request: {} 
  
permissions:
  contents: write

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]   # вибір ОС
    runs-on: ${{ matrix.os }}
    
    env:
      PORT: 5000
      CLIENT_PORT: 3000
      
    steps: 
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
     
      - name: Prepare .env (if example exists)
        run: |
          if [ -f .env.example ]; then cp .env.example .env; fi

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
      
      - name: Build (no-op if absent)
        run: npm run build --if-present

      - name: Start app (background) and wait (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          nohup npm start -- -p $PORT --cp $CLIENT_PORT > /tmp/app.log 2>&1 &
          npx --yes wait-on http://localhost:$PORT || (echo "App didn't start"; tail -n +1 /tmp/app.log; exit 1)
          
      - name: Smoke test HTTP (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          set -e
          curl -fSs http://localhost:$PORT || (echo "Root endpoint failed"; tail -n 200 /tmp/app.log; exit 1)

      - name: Stop app (Ubuntu only)
        if: always() && matrix.os == 'ubuntu-latest'
        run: |
          if lsof -t -i:$PORT > /dev/null 2>&1; then kill $(lsof -t -i:$PORT); fi

      - name: Upload app logs
        if: always() && matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: app-log
          path: /tmp/app.log

      - name: Update STATUS.md (main, Ubuntu only)
        if: github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest'
        run: |
          echo "Last CI: $(date -u +'%Y-%m-%d %H:%M:%SZ') on ${{ runner.os }} with Node $(node -v)" > STATUS.md

      - name: Auto-commit STATUS.md [skip ci]
        if: github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(ci): update STATUS.md [skip ci]"
          file_pattern: STATUS.md

      - name: Prepare .env (if example exists)
        run: |
          if [ -f .env.example ]; then cp .env.example .env; fi
